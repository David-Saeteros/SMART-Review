import os

# Define the directory structure
directories = [
    "SMART-Review/data/raw",
    "SMART-Review/documents/proposals",
    "SMART-Review/documents/reports",
    "SMART-Review/figures/charts",
    "SMART-Review/output/processed",
    "SMART-Review/scripts/analysis",
    "SMART-Review/scripts/utilities",
]

# Define files to be created with basic content
files = {
    "SMART-Review/data/README.md": "# Data Folder\n\nThis folder contains raw and processed data files.",
    "SMART-Review/documents/README.md": "# Documents Folder\n\nThis folder contains project proposals, design documents, and reports.",
    "SMART-Review/figures/README.md": "# Figures Folder\n\nThis folder contains charts, graphs, and images generated by the project.",
    "SMART-Review/output/README.md": "# Output Folder\n\nThis folder contains output files generated by the project.",
    "SMART-Review/README.md": "# SMART Review\n\nA Systematic Manuscript Analysis and Review Tool (SMART Review).\n\nAccelerating systematic reviews with AI.",
    "SMART-Review/LICENSE": "",  # Add your license text here
    "SMART-Review/requirements.txt": "# List your Python dependencies here\npandas\nrequests\nnumpy\nstatsmodels\nopenpyxl",
    "SMART-Review/scripts/main.py": (
        "# Main script entry point\n\n"
        "def main():\n"
        "    print('Running SMART Review project...')\n\n"
        "if __name__ == '__main__':\n"
        "    main()\n"
    ),
}

# Create directories
for directory in directories:
    os.makedirs(directory, exist_ok=True)
    print(f"Created directory: {directory}")

# Create files with the defined content
for file_path, content in files.items():
    # Ensure the parent directory exists
    parent_dir = os.path.dirname(file_path)
    os.makedirs(parent_dir, exist_ok=True)
    
    with open(file_path, "w", encoding="utf-8") as f:
        f.write(content)
    print(f"Created file: {file_path}")

print("\nRepository structure created successfully!")
